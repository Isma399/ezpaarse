#!/usr/bin/env node

/*jslint node: true, maxlen: 100, maxerr: 50, indent: 2 */
'use strict';
var byline      = require('byline');
var URL         = require('url');
var querystring = require('querystring');

function parseUrl(url) {
    var result  = {};
    var param   = querystring.parse(URL.parse(url).query);
    var match;
    if (param.url) {
      url = param.url;
    }
    
    if (param.option) {
      switch (param.option) {
      case 'com_journals':
        result.type = 'TOC';
        break;
      case 'com_toc':
        result.type = 'TOC';
        match = /\/articles\/([a-zA-Z0-9]+)\/abs\/([0-9]{4}\/[0-9]{2}|first)\/contents\/contents.html$/.exec(url);
        if (match) {
          result.pid = match[1];
        }
        break;
      case 'com_article':
        match = /\/articles\/([a-zA-Z0-9]+)\/(abs|full_html|ref)\/([0-9]{4}\/[0-9]{2}|first)\/[a-z]+[0-9]+\/[a-z]+[0-9]+.html$/.exec(url);
        if (match) {
          result.pid = match[1];
          switch (match[2]) {
          case 'abs':
            result.type = 'SUMMARY';
            break;
          case 'full_html':
            result.type = 'HTML';
            break;
          case 'ref':
            result.type = 'REF';
            break;
          }
        } else if (match = /\/articles\/([a-zA-Z0-9]+)\/pdf\/([0-9]{4}\/[0-9]{2}|first)\/[a-z]+[0-9]+.pdf$/.exec(url)) {
          result.pid  = match[1];
          result.type = 'PDF';
        }
        break;
      }
    } else {
      if (match = /\/action\/([a-zA-Z]+)/.exec(url)) {
        switch (match[1]) {
        case 'displayJournal':
          result.type = 'TOC';
          if (param.jid) {
            result.pid = param.jid;
          }
          break;
        case 'displayFulltext':
          if (param.jid) {
            result.pid = param.jid;
          }
          if (param.pdftype) {
            result.type = 'PDF';
          } else {
            result.type = 'REF';
          }
          break;
        case 'displayAbstract':
          result.type = 'SUMMARY';
          if (param.fileId) {
            result.issn = param.fileId.substr(1, 4) + '-' + param.fileId.substr(5, 4);
          }
          break;
        }

      }
    }
    return result;
  }

/*
* If an array of urls is given, return an array of results
* Otherwise, read stdin and write into stdout
*/
exports.parserExecute = function (urls) {

  if (urls && Array.isArray(urls)) {
    var results = [];
    for (var i = 0, l = urls.length; i < l; i++) {
      results.push(parseUrl(urls[i]));
    }
    return results;
  } else {
    var stdin = process.stdin;
    var stdout = process.stdout;
    var stream = byline.createStream(stdin);

    stream.on('end', function () {
      process.exit(0);
    });

    stream.on('close  ', function () {
      process.exit(0);
    });

    stream.on('data', function (line) {
      stdout.write(JSON.stringify(parseUrl(line)) + '\n');
    });
  }
}

if (!module.parent) {
  exports.parserExecute();
}
