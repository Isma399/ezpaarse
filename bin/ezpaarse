#!/bin/bash
#
# ezPAARSE start stop restart status script
#

# search ezpaarse root path
[ -z "$EZPAARSE_PATH" ] && EZPAARSE_PATH="$( cd "$( dirname "${BASH_SOURCE[0]}" )/.." && pwd )"

# load ezpaarse env
. $EZPAARSE_PATH/bin/env

[ -z "$EZPAARSE_PIDFILE" ] && EZPAARSE_PIDFILE="$EZPAARSE_PATH/ezpaarse.pid"
[ -z "$EZPAARSE_PORT" ] && EZPAARSE_PORT=$($EZPAARSE_PATH/bin/readconfig --key EZPAARSE_NODEJS_PORT)
[ -z "$EZPAARSE_NAME" ] && EZPAARSE_NAME=$($EZPAARSE_PATH/bin/readconfig --key name)
[ -z "$EZPAARSE_VERSION" ] && EZPAARSE_VERSION=$($EZPAARSE_PATH/bin/readconfig --key EZPAARSE_VERSION)
[ -z "$EZPAARSE_DEBUG_LEVEL" ] && EZPAARSE_DEBUG_LEVEL="*"
[ -z "$EZPAARSE_LOGDIR" ] && EZPAARSE_LOGDIR="$EZPAARSE_PATH/logs"
[ -z "$FOREVER_CMD" ] && FOREVER_CMD="forever"

# check make build has been called
if [ ! -d $EZPAARSE_PATH/build/ ]; then
  echo "$EZPAARSE_NAME error: please run make build before anything" >&2
  exit 1
fi

ezpaarse_start() {
  if [ "$EZPAARSE_VERSION" == "development" ]; then
    # NODE_ENV used to control the expressjs development or production flag
    NODE_ENV=${NODE_ENV:="$EZPAARSE_VERSION"}
    # DEBUG used to activate verbose and colored logs on stdout
    DEBUG=${DEBUG:="$EZPAARSE_DEBUG_LEVEL"}
    # run app.js forground to help developer
    NODE_ENV="$NODE_ENV" DEBUG="$DEBUG" node $EZPAARSE_PATH/app.js --pidFile $EZPAARSE_PIDFILE &
  else
    $FOREVER_CMD start -p $EZPAARSE_PATH -a -l $EZPAARSE_LOGDIR/forever.log \
                     -o $EZPAARSE_LOGDIR/out.log \
                     -e $EZPAARSE_LOGDIR/err.log \
                     --pidFile $EZPAARSE_PIDFILE \
                     $EZPAARSE_PATH/app.js 1>/dev/null
  fi
}

ezpaarse_stop() {
  if [ "$EZPAARSE_VERSION" == "development" ]; then
    kill `cat $EZPAARSE_PIDFILE`
  else
    $FOREVER_CMD stop -p $EZPAARSE_PATH $EZPAARSE_PATH/app.js 1>/dev/null
  fi
}

ezpaarse_restart() {
  if [ "$EZPAARSE_VERSION" == "development" ]; then
    ezpaarse_stop
    ezpaarse_start
  else
    $FOREVER_CMD restart -p $EZPAARSE_PATH $EZPAARSE_PATH/app.js 1>/dev/null
  fi
}

case $1 in

  start)
    if [[ -f $EZPAARSE_PIDFILE && -d /proc/`cat $EZPAARSE_PIDFILE` ]]; then
      echo "$EZPAARSE_NAME is already running, listening on http://localhost:$EZPAARSE_PORT/"
      exit 0
    else
      $EZPAARSE_PATH/bin/checkconfig -p &> /dev/null
      if [[ $? -eq 0 ]]; then
        ezpaarse_start

        for i in 1 2 3 4 5 6 7 8 9 10 11 12 13 14; do
          if [ -f $EZPAARSE_PIDFILE ]; then
            break
          fi
          sleep 1
        done

        if [ -d /proc/`cat $EZPAARSE_PIDFILE` ]; then
          echo "$EZPAARSE_NAME started, listening on http://localhost:$EZPAARSE_PORT/"
          exit 0
        else
          echo "$EZPAARSE_NAME cannot be started."
          exit 1
        fi
      else
        echo "The port $EZPAARSE_PORT is already used, $EZPAARSE_NAME cannot be started"
        exit 1
      fi
    fi
  ;;

  stop)
    if [[ ! -f $EZPAARSE_PIDFILE || ! -d /proc/`cat $EZPAARSE_PIDFILE` ]]; then
      echo "$EZPAARSE_NAME is already stopped."
      exit 0
    else
      ezpaarse_stop

      for i in 1 2 3 4 5 6 7 8 9 10 11 12 13 14; do
        if [ ! -d /proc/`cat $EZPAARSE_PIDFILE` ]; then
          break
        fi
        sleep 1
      done

      if [ -d /proc/`cat $EZPAARSE_PIDFILE` ]; then
        echo "$EZPAARSE_NAME cannot be stopped."
        exit 1
      else
        echo "$EZPAARSE_NAME is stopped."
        rm -f $EZPAARSE_PIDFILE 2>/dev/null
        exit 0
      fi
    fi
  ;;

  restart | reload | force-reload)
    if [[ ! -f $EZPAARSE_PIDFILE || ! -d /proc/`cat $EZPAARSE_PIDFILE` ]]; then
      PID=0
      ezpaarse_start
    else
      PID=`cat $EZPAARSE_PIDFILE`
      ezpaarse_restart
    fi

    for i in 1 2 3 4 5 6 7 8 9 10 11 12 13 14; do
      if [[ -f $EZPAARSE_PIDFILE && "$PID" != "`cat $EZPAARSE_PIDFILE`" ]]; then
        break
      fi
      sleep 1
    done

    if [ -d /proc/`cat $EZPAARSE_PIDFILE` ]; then
      echo "$EZPAARSE_NAME has been restarted, listening on http://localhost:$EZPAARSE_PORT/"
      exit 0
    else
      echo "$EZPAARSE_NAME cannot be restarted."
      exit 1
    fi    
  ;;

  status)
    if [[ -f $EZPAARSE_PIDFILE && -d /proc/`cat $EZPAARSE_PIDFILE` ]]; then
      echo "$EZPAARSE_NAME is running, listening on http://localhost:$EZPAARSE_PORT/"
      exit 0
    else
      echo "$EZPAARSE_NAME is not running."
      exit 1
    fi
  ;;

  *)
    echo "Usage: $0 {start|stop|restart|status}"
    exit 1
  ;;

esac